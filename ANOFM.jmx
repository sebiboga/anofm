<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="scraper" enabled="true">
      <stringProp name="TestPlan.comments">please update company name (code for company without any space)</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="company" elementType="Argument">
            <stringProp name="Argument.name">company</stringProp>
            <stringProp name="Argument.value">ANOFM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="country" elementType="Argument">
            <stringProp name="Argument.name">country</stringProp>
            <stringProp name="Argument.value">Romania</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="yourString" elementType="Argument">
            <stringProp name="Argument.name">yourString</stringProp>
            <stringProp name="Argument.value">https://www.anofm.ro/dmxConnect/api/oferte_bos/detalii_lmv_test.php?id_lmv=2544307</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="zimbor.go.ro" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&apos;delete&apos;: {&apos;query&apos;: &apos;*:*&apos;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">zimbor.go.ro</stringProp>
          <stringProp name="HTTPSampler.port">8985</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/solr/jobs/update?_=1714555543724&amp;commitWithin=1000&amp;overwrite=true&amp;wt=json</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">Created from cURL on 2024-05-01T12:28:27.686</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,ro-RO;q=0.8,ro;q=0.7</stringProp>
              </elementProp>
              <elementProp name="Content-type" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="^Cookie" elementType="Header">
                <stringProp name="Header.name">^Cookie</stringProp>
                <stringProp name="Header.value">mp_d7f79c10b89f9fa3026f2fb08d3cf36d_mixpanel=^%^7B^%^22distinct_id^%^22^%^3A^%^20^%^22^%^24device^%^3A18db616ccb84bd-0e044aeb7c162a-26001851-232800-18db616ccb84bd^%^22^%^2C^%^22^%^24device_id^%^22^%^3A^%^20^%^2218db616ccb84bd-0e044aeb7c162a-26001851-232800-18db616ccb84bd^%^22^%^2C^%^22^%^24initial_referrer^%^22^%^3A^%^20^%^22^%^24direct^%^22^%^2C^%^22^%^24initial_referring_domain^%^22^%^3A^%^20^%^22^%^24direct^%^22^%^7D^</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://zimbor.go.ro:8985</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://zimbor.go.ro:8985/solr/</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2024-05-01T12:28:27.686</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="peviitor.ro" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="TestPlan.comments">https://peviitor.ro/</stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" ===   GET open positions from WEBSITE    ====" enabled="true">
          <stringProp name="TestPlan.comments">https://www.anofm.ro/lmvw.html?agentie=ANOFM&amp;categ=3&amp;subcateg=1&amp;id_lmv=2268810</stringProp>
        </GenericController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="www.anofm.ro" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cauta" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cauta</stringProp>
                </elementProp>
                <elementProp name="select" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">ANOFM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">select</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                </elementProp>
                <elementProp name="localitate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">localitate</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.anofm.ro</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/dmxConnect/api/oferte_bos/oferte_bos_query2L_Test.php</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Created from cURL on 2024-04-30T19:15:10.647</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9,ro-RO;q=0.8,ro;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.anofm.ro/lmvw.html?agentie=ANOFM&amp;categ=3&amp;subcateg=1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="^sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">^sec-ch-ua</stringProp>
                  <stringProp name="Header.value">^\^Chromium^\^;v=^\^124^\^, ^\^Google</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="^sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">^sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">^\^Windows^\^^</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2024-04-30T19:15:10.647</stringProp>
            </HeaderManager>
            <hashTree/>
            <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="total" enabled="true">
              <stringProp name="JMESExtractor.referenceName">total</stringProp>
              <stringProp name="JMESExtractor.jmesPathExpr">lmv.total</stringProp>
              <stringProp name="JMESExtractor.matchNumber">1</stringProp>
            </JMESPathExtractor>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="TestPlan.comments">${__jexl3(${total}/8-1,)}</stringProp>
            <stringProp name="LoopController.loops">${__jexl3(${total}/8-1,)}</stringProp>
          </LoopController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">0</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">8</stringProp>
              <stringProp name="CounterConfig.name">i</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="www.anofm.ro" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="offset" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${i}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">offset</stringProp>
                  </elementProp>
                  <elementProp name="cauta" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cauta</stringProp>
                  </elementProp>
                  <elementProp name="select" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">select</stringProp>
                  </elementProp>
                  <elementProp name="limit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">limit</stringProp>
                  </elementProp>
                  <elementProp name="localitate" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">localitate</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">www.anofm.ro</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/dmxConnect/api/oferte_bos/oferte_bos_query2L_Test.php</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Created from cURL on 2023-08-16T22:49:58.37</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,ro;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">^\^Chromium^\^;v=^\^116^\^, ^\^Not)A;Brand^\^;v=^\^24^\^, ^\^Google</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">^\^Windows^\^</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">Created from cURL on 2023-08-16T22:49:58.402</stringProp>
              </HeaderManager>
              <hashTree/>
              <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="title" enabled="true">
                <stringProp name="JMESExtractor.referenceName">title</stringProp>
                <stringProp name="JMESExtractor.jmesPathExpr">lmv.data[*].OCCUPATION</stringProp>
                <stringProp name="JMESExtractor.matchNumber">-1</stringProp>
              </JMESPathExtractor>
              <hashTree/>
              <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="city" enabled="true">
                <stringProp name="JMESExtractor.referenceName">city</stringProp>
                <stringProp name="JMESExtractor.jmesPathExpr">lmv.data[*].ADRESA_LOCALITATEA</stringProp>
                <stringProp name="JMESExtractor.matchNumber">-1</stringProp>
              </JMESPathExtractor>
              <hashTree/>
              <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="county" enabled="true">
                <stringProp name="JMESExtractor.referenceName">county</stringProp>
                <stringProp name="JMESExtractor.jmesPathExpr">lmv.data[*].ADRESA_JUDETUL</stringProp>
                <stringProp name="JMESExtractor.matchNumber">-1</stringProp>
              </JMESPathExtractor>
              <hashTree/>
              <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="ids" enabled="true">
                <stringProp name="JMESExtractor.referenceName">ids</stringProp>
                <stringProp name="JMESExtractor.jmesPathExpr">lmv.data[*].POSTED_JOBS_ID</stringProp>
                <stringProp name="JMESExtractor.matchNumber">-1</stringProp>
              </JMESPathExtractor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname=" ===   CREATE a LIST of open positions    ====" enabled="true">
              <stringProp name="TestPlan.comments">Transform</stringProp>
            </GenericController>
            <hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
                <stringProp name="ForeachController.inputVal">ids</stringProp>
                <stringProp name="ForeachController.returnVal">id</stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
                <stringProp name="ForeachController.startIndex">0</stringProp>
              </ForeachController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/dmxConnect/api/oferte_bos/detalii_lmv_test.php?id_lmv=${id}" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">www.anofm.ro</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/dmxConnect/api/oferte_bos/detalii_lmv_test.php?id_lmv=${id}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">Created from cURL on 2024-04-30T21:06:51.339</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,ro-RO;q=0.8,ro;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">https://www.anofm.ro/lmvw.html?agentie=ANOFM&amp;id_lmv=${id}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">empty</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">cors</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="accept" elementType="Header">
                        <stringProp name="Header.name">accept</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="^sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">^sec-ch-ua</stringProp>
                        <stringProp name="Header.value">^\^Chromium^\^;v=^\^124^\^, ^\^Google</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="^sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">^sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">^\^Windows^\^^</stringProp>
                      </elementProp>
                    </collectionProp>
                    <stringProp name="TestPlan.comments">Created from cURL on 2024-04-30T21:06:51.339</stringProp>
                  </HeaderManager>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="ocupatie" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">ocupatie</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].ocupatie</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="data_inreg" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">data_inreg</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].data_inreg</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="CF" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">CF</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].CF</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="AGENT" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">AGENT</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].AGENT</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="CONTRACT_BEGINNING_DATE" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">CONTRACT_BEGINNING_DATE</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].CONTRACT_BEGINNING_DATE</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="EXPIRATION_DATE" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">EXPIRATION_DATE</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].EXPIRATION_DATE</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="EMAIL" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">EMAIL</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].EMAIL</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="OFFERED_MIN_INCOME" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">OFFERED_MIN_INCOME</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].OFFERED_MIN_INCOME</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="OFFERED_MAX_INCOME" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">OFFERED_MIN_INCOME</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].OFFERED_MAX_INCOME</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="TELEFON_MOBIL" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">TELEFON_MOBIL</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].TELEFON_MOBIL</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="COUNTY" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">COUNTY</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].ADRESA_JUDETUL</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="ADRESA_LOCALITATEA" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">ADRESA_LOCALITATEA</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].ADRESA_LOCALITATEA</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="ADRESA_STRADA" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">ADRESA_STRADA</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].ADRESA_STRADA</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="ADRESA_NR" enabled="true">
                    <stringProp name="JMESExtractor.referenceName">ADRESA_NR</stringProp>
                    <stringProp name="JMESExtractor.jmesPathExpr">detalii_lmv[0].ADRESA_NR</stringProp>
                    <stringProp name="JMESExtractor.matchNumber">1</stringProp>
                  </JMESPathExtractor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">500</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="compute" enabled="true">
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">import groovy.json.JsonOutput
import java.security.MessageDigest


def thisjob = [:]
var id  = vars.get(&quot;id&quot;);


var county =  vars.get(&quot;COUNTY&quot;);
var company =  vars.get(&quot;CF&quot;);

// Convert the job title to a string explicitly
thisjob[&apos;title&apos;] = vars.get(&quot;ocupatie&quot;);
thisjob[&apos;url&apos;] = &quot;https://www.anofm.ro/dmxConnect/api/oferte_bos/detalii_lmv_test.php?id_lmv=&quot;+id;

thisjob[&apos;id&apos;] = MessageDigest.getInstance(&apos;MD5&apos;).digest(thisjob[&apos;url&apos;].bytes).encodeHex().toString()

thisjob[&apos;jobLocation.address.county&apos;] = vars.get(&quot;COUNTY&quot;);
thisjob[&apos;jobLocation.address.city&apos;] = vars.get(&quot;ADRESA_LOCALITATEA&quot;);
thisjob[&apos;jobLocation.address.street&apos;] = vars.get(&quot;ADRESA_STRADA&quot;)+&quot; &quot;+vars.get(&quot;ADRESA_NR&quot;);
thisjob[&apos;hiringOrganization.cui&apos;] = vars.get(&quot;CF&quot;);
thisjob[&apos;hiringOrganization.name&apos;] = vars.get(&quot;AGENT&quot;);
thisjob[&apos;datePosted&apos;] = vars.get(&quot;data_inreg&quot;);
thisjob[&apos;jobStartDate&apos;] = vars.get(&quot;CONTRACT_BEGINNING_DATE&quot;);
thisjob[&apos;validThrough&apos;] = vars.get(&quot;EXPIRATION_DATE&quot;);
thisjob[&apos;applicationContact&apos;] = vars.get(&quot;EMAIL&quot;);
thisjob[&apos;baseSalary.value&apos;] = vars.get(&quot;OFFERED_MIN_INCOME&quot;) ;
thisjob[&apos;estimatedSalary&apos;] =  vars.get(&quot;OFFERED_MIN_INCOME&quot;) ;
thisjob[&apos;tel&apos;] = vars.get(&quot;TELEFON_MOBIL&quot;) ;
thisjob[&apos;sursa&apos;] = &apos;https://www.anofm.ro&apos; ;

//pushing here job by job so jobList will be initiallized with empty array


// Convert this_job to JSON format
def jsonOutput = JsonOutput.toJson(thisjob)

// Retrieve the jobList from vars
def jobList = vars.getObject(&quot;jobList&quot;)

//initialize it as an empty list
    jobList = []

// Add the current job JSON to the jobList
jobList &lt;&lt; jsonOutput

// Update the jobList in vars
vars.putObject(&quot;jobList&quot;, jobList)</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TEST" enabled="true"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="zimbor.go.ro" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${jobList}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">zimbor.go.ro</stringProp>
                    <stringProp name="HTTPSampler.port">8985</stringProp>
                    <stringProp name="HTTPSampler.protocol">http</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                    <stringProp name="HTTPSampler.path">/solr/jobs/update?_=1714555543724&amp;commitWithin=1000&amp;overwrite=true&amp;wt=json</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">Created from cURL on 2024-05-01T12:28:27.686</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP HeaderManager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">en-US,en;q=0.9,ro-RO;q=0.8,ro;q=0.7</stringProp>
                        </elementProp>
                        <elementProp name="Content-type" elementType="Header">
                          <stringProp name="Header.name">Content-type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="^Cookie" elementType="Header">
                          <stringProp name="Header.name">^Cookie</stringProp>
                          <stringProp name="Header.value">mp_d7f79c10b89f9fa3026f2fb08d3cf36d_mixpanel=^%^7B^%^22distinct_id^%^22^%^3A^%^20^%^22^%^24device^%^3A18db616ccb84bd-0e044aeb7c162a-26001851-232800-18db616ccb84bd^%^22^%^2C^%^22^%^24device_id^%^22^%^3A^%^20^%^2218db616ccb84bd-0e044aeb7c162a-26001851-232800-18db616ccb84bd^%^22^%^2C^%^22^%^24initial_referrer^%^22^%^3A^%^20^%^22^%^24direct^%^22^%^2C^%^22^%^24initial_referring_domain^%^22^%^3A^%^20^%^22^%^24direct^%^22^%^7D^</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">http://zimbor.go.ro:8985</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://zimbor.go.ro:8985/solr/</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                      </collectionProp>
                      <stringProp name="TestPlan.comments">Created from cURL on 2024-05-01T12:28:27.686</stringProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                    <boolProp name="ResultCollector.error_logging">true</boolProp>
                    <objProp>
                      <name>saveConfig</name>
                      <value class="SampleSaveConfiguration">
                        <time>true</time>
                        <latency>true</latency>
                        <timestamp>true</timestamp>
                        <success>true</success>
                        <label>true</label>
                        <code>true</code>
                        <message>true</message>
                        <threadName>true</threadName>
                        <dataType>true</dataType>
                        <encoding>false</encoding>
                        <assertions>true</assertions>
                        <subresults>true</subresults>
                        <responseData>false</responseData>
                        <samplerData>false</samplerData>
                        <xml>false</xml>
                        <fieldNames>true</fieldNames>
                        <responseHeaders>false</responseHeaders>
                        <requestHeaders>false</requestHeaders>
                        <responseDataOnError>false</responseDataOnError>
                        <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                        <assertionsResultsToSave>0</assertionsResultsToSave>
                        <bytes>true</bytes>
                        <sentBytes>true</sentBytes>
                        <url>true</url>
                        <threadCounts>true</threadCounts>
                        <idleTime>true</idleTime>
                        <connectTime>true</connectTime>
                      </value>
                    </objProp>
                    <stringProp name="filename"></stringProp>
                  </ResultCollector>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
